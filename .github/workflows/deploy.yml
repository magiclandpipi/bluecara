name: Deploy Go Project to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22.4'

    - name: Print EC2_SSH_KEY
      run: echo "$EC2_SSH_KEY" | base64 --decode
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

    - name: Build the Go project
      run: |
        mkdir -p build
        go build -o build/myapp ./

    - name: Archive the build artifacts
      run: zip -r build.zip build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build
        path: .

    - name: Print current directory
      run: |
        pwd
        ls -l

    - name: List downloaded artifacts
      run: |
        ls -ld build.zip
        file build.zip

    - name: Rename build.zip to avoid conflicts
      run: |
        if [ -d "build.zip" ]; then
          echo "Error: build.zip is a directory, expected a file."
          exit 1
        fi
        mv build.zip downloaded_build.zip
        ls -l downloaded_build.zip
        file downloaded_build.zip

    - name: Verify current directory and file existence
      run: |
        echo "Current directory: $(pwd)"
        echo "Contents of current directory:"
        ls -l
        echo "Attempting to unzip downloaded_build.zip"
        if [ -f "downloaded_build.zip" ]; then
          echo "File downloaded_build.zip exists."
        else
          echo "File downloaded_build.zip does not exist."
          exit 1
        fi
        file downloaded_build.zip
        unzip -l downloaded_build.zip

    - name: Extract build artifacts
      run: |
        unzip -o $(pwd)/downloaded_build.zip -d $(pwd)/build || echo "Failed to unzip downloaded_build.zip: $?"

    - name: List extracted files
      run: |
        ls -l build

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo systemctl stop myapp
          rm -rf /home/ec2-user/myapp
          mkdir -p /home/ec2-user/myapp
          mv build/myapp /home/ec2-user/myapp/
          sudo systemctl start myapp
        debug: true
